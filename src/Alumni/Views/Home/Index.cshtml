@using Microsoft.AspNetCore.Http
@{
    ViewData["Title"] = "Pagina Principala";
}

<div class="row">
    <div class="col-lg-8">
       
        
    </div>

    <div class="col-lg-4">
        <div class="divContainer">
            <div id="divChat" class="chatRoom">                
                <div class="content">
                    <div id="divusers" class="users">
                    </div>
                </div>
            </div>

            <input id="hdId" type="hidden" />
            <input id="displayname" type="hidden" />
        </div>
    </div>   
</div>


@section scripts {
    <!--Script references. -->
    <link rel="stylesheet" href="~/css/ChatStyle.css" />
    <link rel="stylesheet" href="~/css/JQueryUI/themes/base/jquery.ui.all.css" />
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <!--UI scripts -->
    <script src="~/lib/ui/jquery.ui.core.js"></script>
    <script src="~/lib/ui/jquery.ui.widget.js"></script>
    <script src="~/lib/ui/jquery.ui.mouse.js"></script>
    <script src="~/lib/ui/jquery.ui.draggable.js"></script>
    <script src="~/lib/ui/jquery.ui.resizable.js"></script>

    <!--Reference the SignalR library. -->
    <script src="~/lib/jquery/dist/jquery.signalR-2.2.1.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
        $(function () {
            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.chatHub;

            // Create a function that the hub can call back to display messages.
            //chat.client.addNewMessage = function (name, message) {
            //    // Add the message to the page.
            //    $('#discussion').append('<li><strong>' + htmlEncode(name)
            //        + '</strong>: ' + htmlEncode(message) + '</li>');
            //};

            // Function to display all the connected users to the newly connected user
            chat.client.onConnected = function (userId, connectionId, name, userList) {
                $('#hdId').val(userId);
                $('#spanUser').html(name);
                code = '';

                for (i = 0; i < userList.length; i++) {
                    code = $('<a id="' + userList[i].UserId + '" class="user" >' + userList[i].User.lName + ' ' + userList[i].User.fName + '</a>');
                    $("#divusers").append(code);
                }
            }

            chat.client.onUserDisconnected = function (userId, userName, userList) {
                $('#' + userId).remove();

                var disc = $('<div class="disconnect">"' + userName + '" logged off.</div>');

                $(disc).hide();
                $('#divusers').prepend(disc);
                $(disc).fadeIn(200).delay(2000).fadeOut(200);

            }

            //Function to add the newly user to user list and inform other a new user is coneected
            chat.client.newUserConnected = function (userId, userName, userList) {
                code = $('<a id="' + userId + '" class="user" >' + userName + '</a>');
                $("#divusers").append(code);
            }


            chat.client.setChatWindow = function (groupName, connectTo, name) {
                var div = '<div id="' + groupName + '" class="ui-widget-content draggable" rel="0">' +
                        '<div class="header">' +
                            '<div  style="float:right;">' +
                                '<img id="imgDelete"  style="cursor:pointer;" src="/Images/delete.png"/>' +
                            '</div>' +

                            '<span class="selText" rel="0">' + name + '</span>' +
                            '<span class="selText" id="msgTypeingName" rel="0"></span>' +
                        '</div>' +
                        '<div id="divMessage" class="messageArea">' +

                        '</div>' +
                        '<div class="buttonBar">' +
                            '<input id="txtPrivateMessage" class="msgText" type="text"   />' +
                            '<input id="btnSendMessage" class="submitButton button" type="button" value="Send"   />' +
                        '</div>' +
                        '<div id="scrollLength"></div>' +
                    '</div>';

                var $div = $(div);

                // DELETE BUTTON IMAGE
                $div.find('#imgDelete').click(function () {
                    $('#' + groupName).remove();
                });

                // Send Button event
                $div.find("#btnSendMessage").click(function () {
                    $textBox = $div.find("#txtPrivateMessage");
                    var msg = $textBox.val();
                    if (msg.length > 0) {
                        chat.server.sendPrivateMessage(msg, groupName, $('#hdId').val(), connectTo);
                        $textBox.val('');
                    }
                });

                $div.find("#txtPrivateMessage").keyup(function (e) {
                    if (e.which == 13) {
                        $div.find("#btnSendMessage").click();
                    }
                });

                AddDivToContainer($div);

                $('#txtPrivateMessage').val('').focus();

            }

            chat.client.addMessage = function (message, groupName, fromUserId, toUser, name) {
                if ($('#' + groupName).length == 0) {
                    chat.client.setChatWindow(groupName, fromUserId, name);
                }

                $('#' + groupName).find('#divMessage').append('<div class="message"><span class="userName">' + name + '</span>: ' + message + '</div>');
            }

            function AddDivToContainer($div) {
                $('.divContainer').prepend($div);
                $div.draggable({
                    handle: ".header"
                    //stop: function () {
                    //}
                });
            }

            // Get the user name and store it to prepend to messages.
            $('#displayname').val('@Context.Session.GetString("Prenume") @Context.Session.GetString("Nume")');

            // Set initial focus to message input box.
            $('#message').focus();

            // Start the connection.
            $.connection.hub.start().done(function () {
                $('#sendmessage').click(function () {
                    // Call the Send method on the hub.
                    chat.server.send($('#displayname').val(), $('#message').val());
                    // Clear text box and reset focus for next comment.
                    $('#message').val('').focus();
                });

                $('.user').click(function () {
                    //if ($(this).hasClass('online')) {
                        chat.server.createGroup($('#hdId').val(), $(this).attr('id'));
                        // var chatWindow = $("#divChatWindow").clone(true);
                        // $(chatWindow).attr('chatToId', $(this).attr('data-userid'));
                        // $("#chatContainer").append(chatWindow);
                    //}
                    return false;
                });

                $("#message").keypress(function (e) {
                    if (e.which == 13) {
                        $('#sendmessage').click();
                    }
                });

            });
        });

        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
    </script>
}

@*<div id="myCarousel" class="carousel slide" data-ride="carousel" data-interval="6000">
    <ol class="carousel-indicators">
        <li data-target="#myCarousel" data-slide-to="0" class="active"></li>
        <li data-target="#myCarousel" data-slide-to="1"></li>
        <li data-target="#myCarousel" data-slide-to="2"></li>
        <li data-target="#myCarousel" data-slide-to="3"></li>
    </ol>
    @*<div class="carousel-inner" role="listbox">
        <div class="item active">
            <img src="~/images/banner1.svg" alt="ASP.NET" class="img-responsive" />
            <div class="carousel-caption" role="option">
                <p>
                    Learn how to build ASP.NET apps that can run anywhere.
                    <a class="btn btn-default" href="http://go.microsoft.com/fwlink/?LinkID=525028&clcid=0x409">
                        Learn More
                    </a>
                </p>
            </div>
        </div>
        <div class="item">
            <img src="~/images/banner2.svg" alt="Visual Studio" class="img-responsive" />
            <div class="carousel-caption" role="option">
                <p>
                    There are powerful new features in Visual Studio for building modern web apps.
                    <a class="btn btn-default" href="http://go.microsoft.com/fwlink/?LinkID=525030&clcid=0x409">
                        Learn More
                    </a>
                </p>
            </div>
        </div>
        <div class="item">
            <img src="~/images/banner3.svg" alt="Package Management" class="img-responsive" />
            <div class="carousel-caption" role="option">
                <p>
                    Bring in libraries from NuGet, Bower, and npm, and automate tasks using Grunt or Gulp.
                    <a class="btn btn-default" href="http://go.microsoft.com/fwlink/?LinkID=525029&clcid=0x409">
                        Learn More
                    </a>
                </p>
            </div>
        </div>
        <div class="item">
            <img src="~/images/banner4.svg" alt="Microsoft Azure" class="img-responsive" />
            <div class="carousel-caption" role="option">
                <p>
                    Learn how Microsoft's Azure cloud platform allows you to build, deploy, and scale web apps.
                    <a class="btn btn-default" href="http://go.microsoft.com/fwlink/?LinkID=525027&clcid=0x409">
                        Learn More
                    </a>
                </p>
            </div>
        </div>
    </div>
    <a class="left carousel-control" href="#myCarousel" role="button" data-slide="prev">
        <span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>
        <span class="sr-only">Previous</span>
    </a>
    <a class="right carousel-control" href="#myCarousel" role="button" data-slide="next">
        <span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>
        <span class="sr-only">Next</span>
    </a>
</div>

<div class="row">
    <div class="col-md-3">
        <h2>Application uses</h2>
        <ul>
            <li>Sample pages using ASP.NET Core MVC</li>
            <li><a href="http://go.microsoft.com/fwlink/?LinkId=518007">Gulp</a> and <a href="http://go.microsoft.com/fwlink/?LinkId=518004">Bower</a> for managing client-side libraries</li>
            <li>Theming using <a href="http://go.microsoft.com/fwlink/?LinkID=398939">Bootstrap</a></li>
        </ul>
    </div>
    <div class="col-md-3">
        <h2>How to</h2>
        <ul>
            <li><a href="http://go.microsoft.com/fwlink/?LinkID=398600">Add a Controller and View</a></li>
            <li><a href="http://go.microsoft.com/fwlink/?LinkID=699562">Add an appsetting in config and access it in app.</a></li>
            <li><a href="http://go.microsoft.com/fwlink/?LinkId=699315">Manage User Secrets using Secret Manager.</a></li>
            <li><a href="http://go.microsoft.com/fwlink/?LinkId=699316">Use logging to log a message.</a></li>
            <li><a href="http://go.microsoft.com/fwlink/?LinkId=699317">Add packages using NuGet.</a></li>
            <li><a href="http://go.microsoft.com/fwlink/?LinkId=699318">Add client packages using Bower.</a></li>
            <li><a href="http://go.microsoft.com/fwlink/?LinkId=699319">Target development, staging or production environment.</a></li>
        </ul>
    </div>
    <div class="col-md-3">
        <h2>Overview</h2>
        <ul>
            <li><a href="http://go.microsoft.com/fwlink/?LinkId=518008">Conceptual overview of what is ASP.NET Core</a></li>
            <li><a href="http://go.microsoft.com/fwlink/?LinkId=699320">Fundamentals of ASP.NET Core such as Startup and middleware.</a></li>
            <li><a href="http://go.microsoft.com/fwlink/?LinkId=398602">Working with Data</a></li>
            <li><a href="http://go.microsoft.com/fwlink/?LinkId=398603">Security</a></li>
            <li><a href="http://go.microsoft.com/fwlink/?LinkID=699321">Client side development</a></li>
            <li><a href="http://go.microsoft.com/fwlink/?LinkID=699322">Develop on different platforms</a></li>
            <li><a href="http://go.microsoft.com/fwlink/?LinkID=699323">Read more on the documentation site</a></li>
        </ul>
    </div>
    <div class="col-md-3">
        <h2>Run & Deploy</h2>
        <ul>
            <li><a href="http://go.microsoft.com/fwlink/?LinkID=517851">Run your app</a></li>
            <li><a href="http://go.microsoft.com/fwlink/?LinkID=517853">Run tools such as EF migrations and more</a></li>
            <li><a href="http://go.microsoft.com/fwlink/?LinkID=398609">Publish to Microsoft Azure Web Apps</a></li>
        </ul>
    </div>
</div>*@
